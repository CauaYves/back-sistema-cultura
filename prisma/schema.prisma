// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator dbml {
  provider = "prisma-dbml-generator"
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int                   @id @default(autoincrement())
  name                 String
  cpf                  String                @unique
  email                String                @unique
  emailConfirmed       Boolean               @default(false)
  password             String
  SessionId            Int?
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  Sessions             Session?
  UserConfirmationCode UserConfirmationCode?
  CulturalAgent        CulturalAgent?
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
}

model UserConfirmationCode {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  User      User     @relation(fields: [userId], references: [id])
  code      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CulturalAgent {
  id                     Int      @id @default(autoincrement())
  email                  String
  codename               String
  mothername             String
  borndate               String
  nacionality            String
  naturalness            String
  rg                     String
  issuingbody            String
  uf                     String
  gender                 String
  race                   String
  student                Boolean
  education              String
  extracurricularCourses String
  superiorCourses        String
  deficiency             Boolean
  address                String
  houseNumber            String
  complement             String
  cep                    String
  public                 Boolean
  fileId                 String   @unique
  File                   File?    @relation(fields: [fileId], references: [id])
  userId                 Int      @unique
  User                   User     @relation(fields: [userId], references: [id])
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
}

model File {
  id            String         @id @default(cuid())
  name          String
  key           String
  contentType   String
  CulturalAgent CulturalAgent?
  createdAt     DateTime       @default(now())
}
